{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../room.service\";\nimport * as i2 from \"@angular/router\";\n\nfunction RoomListComponent_tr_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵelementStart(10, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function RoomListComponent_tr_19_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const room_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.deleteRoom(room_r1.id);\n    });\n    i0.ɵɵtext(11, \"Delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function RoomListComponent_tr_19_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const room_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.updateRoom(room_r1.id);\n    });\n    i0.ɵɵtext(13, \"Update\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function RoomListComponent_tr_19_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const room_r1 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.roomDetails(room_r1.id);\n    });\n    i0.ɵɵtext(15, \"Details\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const room_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r1.date);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r1.startHour);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r1.endHour);\n  }\n}\n\nexport class RoomListComponent {\n  constructor(roomService, router) {\n    this.roomService = roomService;\n    this.router = router;\n  }\n\n  ngOnInit() {\n    this.reloadData();\n  }\n\n  reloadData() {\n    this.rooms = this.roomService.getRoomList();\n  }\n\n  deleteRoom(id) {\n    this.roomService.deleteRoom(id).subscribe(data => {\n      console.log(data);\n      this.reloadData();\n    }, error => console.log(error));\n  }\n\n  roomDetails(id) {\n    this.router.navigate(['details', id]);\n  }\n\n  updateRoom(id) {\n    this.router.navigate(['update', id]);\n  }\n\n}\n\nRoomListComponent.ɵfac = function RoomListComponent_Factory(t) {\n  return new (t || RoomListComponent)(i0.ɵɵdirectiveInject(i1.RoomService), i0.ɵɵdirectiveInject(i2.Router));\n};\n\nRoomListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RoomListComponent,\n  selectors: [[\"app-room-list\"]],\n  decls: 21,\n  vars: 3,\n  consts: [[1, \"panel\", \"panel-primary\"], [1, \"panel-heading\"], [1, \"panel-body\"], [1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"btn\", \"btn-info\", 2, \"margin-left\", \"10px\", 3, \"click\"]],\n  template: function RoomListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"h2\");\n      i0.ɵɵtext(3, \"Room List\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 2);\n      i0.ɵɵelementStart(5, \"table\", 3);\n      i0.ɵɵelementStart(6, \"thead\");\n      i0.ɵɵelementStart(7, \"tr\");\n      i0.ɵɵelementStart(8, \"th\");\n      i0.ɵɵtext(9, \"name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\");\n      i0.ɵɵtext(11, \"date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\");\n      i0.ɵɵtext(13, \"startHour\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\");\n      i0.ɵɵtext(15, \"endHour\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"th\");\n      i0.ɵɵtext(17, \"Actions\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"tbody\");\n      i0.ɵɵtemplate(19, RoomListComponent_tr_19_Template, 16, 4, \"tr\", 4);\n      i0.ɵɵpipe(20, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(19);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(20, 1, ctx.rooms));\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyb29tLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"]\n});","map":{"version":3,"sources":["C:\\desenvolvimento\\workspace\\client-room\\src\\app\\room-list\\room-list.component.ts","C:\\desenvolvimento\\workspace\\client-room\\src\\app\\room-list\\room-list.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Observable } from 'rxjs';\n\nimport { Room } from '../room';\nimport { RoomService } from '../room.service';\n\n@Component({\n  selector: 'app-room-list',\n  templateUrl: './room-list.component.html',\n  styleUrls: ['./room-list.component.css']\n})\nexport class RoomListComponent implements OnInit {\n  rooms: Observable<Room[]>\n\n  constructor(private roomService: RoomService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.reloadData();\n  }\n  reloadData(){\n    this.rooms = this.roomService.getRoomList();\n  }\n  deleteRoom(id: number){\n    this.roomService.deleteRoom(id)\n                    .subscribe(\n                      data => {\n                        console.log(data)\n                        this.reloadData();\n                      },\n                      error => console.log(error)\n                    );\n  }\n  roomDetails(id: number){\n    this.router.navigate(['details', id])\n  }\n  updateRoom(id:number){\n    this.router.navigate(['update', id]);\n  }\n\n\n}\n","<div class=\"panel panel-primary\">\n    <div class=\"panel-heading\">\n        <h2>Room List</h2>\n    </div>\n    <div class=\"panel-body\">\n        <table class=\"table table-striped\">\n            <thead>\n                <tr>\n                    <th>name</th>\n                    <th>date</th>\n                    <th>startHour</th>\n                    <th>endHour</th>\n                    <th>Actions</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let room of rooms | async\">\n                    <td>{{room.name}}</td>\n                    <td>{{room.date}}</td>\n                    <td>{{room.startHour}}</td>\n                    <td>{{room.endHour}}</td>\n                    <td><button (click)=\"deleteRoom(room.id)\" class=\"btn btn-danger\">Delete</button>\n                        <button (click)=\"updateRoom(room.id)\" class=\"btn btn-info\"\n                            style=\"margin-left: 10px\">Update</button>\n                        <button (click)=\"roomDetails(room.id)\" class=\"btn btn-info\"\n                            style=\"margin-left: 10px\">Details</button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}